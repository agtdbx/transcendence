API HELP :

REQUEST FORM - TO TEST
    {'type' : <type>, 'cmd' : <cmd>, ...}
    -> Reply to request
    => Message recieved without request


ERROR - TO TEST
    => Error recieved
        'type' : 'error'
        'error' : <error>


CONNECTION
    with token - TO TEST
        'type' : 'connect'
        'cmd' : 'by_token'
        'token' : <token>
        -> 'type' : 'connectionReply'
           'success' : true | false
           'error' : <error> #Empty in case of success = true

    with username - TO TEST
        'type' : 'connect'
        'cmd' : 'by_username'
        'username' : <username>
        'password' : <password>
        -> 'type' : 'connectionReply'
           'success' : true | false
           'error' : <error> #Empty in case of success = true


MESSAGE
    send message - TO TEST
        'type' : 'message'
        'cmd' : 'sendMessage'
        'message' : <message>
        'channel' : 'general' | <user id>
        -> {{message}}

    => Message recieved
        {{message}}

    => Server message recieved
        'type' : 'serverMessage'
        'message' : <message>
        'date' : <date>

    => Invite recieved
        'type' : 'invite'
        'username' : <username>
        'pp' : <profile picture link>
        'roomId' : <room id>

    {{message}} :
        'type' : 'message'
        'message' : <message>
        'username' : <username>
        'pp' : <profile picture link>
        'date' : <date>
        'channel' : 'general' | <user id>


QUICK GAME ROOM
    ask for new game
        'type' : 'quickRoom'
        'cmd' : 'askForRoom'
        -> 'type' : 'joinWaitlist'

    quit game wait
        'type' : 'quickRoom'
        'cmd' : 'quitRoom'
        -> 'type' : 'quitWaitlist'

    => Game start
        'type' : 'gameStart'
        'gamePort' : <port> # port of the websocket for game
        'paddleId' : <paddle id>
        'teamId' : <team id> # 0 left, 1 right
        

GAME ROOM
    create game room
        'type' : 'gameRoom'
        'cmd' : 'createRoom'
        -> 'type' : 'createRoomInfo'
           {{update room info}}

    join game room
        'type' : 'gameRoom'
        'cmd' : 'joinRoom'
        'gameRoomId' : <game room id>
        -> 'type' : 'joinRoomInfo'
           {{join room info}}

    quit game room
        'type' : 'gameRoom'
        'cmd' : 'quitGameRoom'
        -> 'type' : 'quitGameRoom'
        
    /!\ Only the creator of the room can use it /!\
    send game room invite
        'type' : 'gameRoom'
        'cmd' : inviteGameRoom'
        'targetId' : <user id> | 'ia'
        -> No more field
        
    /!\ Only the creator of the room can use it /!\
    add bot to a team
    	'type' : 'gameRoom'
    	'cmd' : 'addBot'
    	'team' : 'left' | 'right'
        -> 'type' : 'updateRoomInfo'
           {{update room info}}

    change team
        'type' : 'gameRoom'
        'cmd' : 'changeTeam'
        'team' : 'left' | 'right'
        -> 'type' : 'updateRoomInfo'
           {{update room info}}

    /!\ Only the creator of the room can use it /!\
    change power up option
        'type' : 'gameRoom'
        'cmd' : 'changePowerUp'
        -> 'type' : 'updateRoomInfo'
           {{update room info}}

    /!\ Only the creator of the room can use it /!\
    change map
        'type' : 'gameRoom'
        'cmd' : 'changeMap'
        'mapId' : <map id>
        -> 'type' : 'updateRoomInfo'
    	   {{update room info}}

    /!\ Only the creator of the room can use it /!\
    start game
        'type' : 'gameRoom'
        'cmd' : 'startGame'
        -> 'type' : 'startGame'
           'success' : true | false

	=> invite reply
		'type' : 'ReplyGameRoom'
		'targetId' : <user id> | 'ia'
		'success' : true | false
		
	=> someone quit game room
		'type' : 'quitGameRoom'
		{{update room info}}
	
	=> quick from game room # When the creator leave the game room
		'type' : 'quickFromGameRoom'

    => update room info
    	'type' : 'updateRoomInfo'
        {{update room info}}

    => Game start
        'type' : 'gameStart'
        'gamePort' : <port> # port of the websocket for game
        'paddleId' : <paddle id>
        'teamId' : <team id> # 0 left, 1 right

    {{update room info}} :
        'teamLeft' : [<user id>] # if id -1, it's an ia
        'teamRight' : [<user id>]
        'powerUpActivate' : false | true
        'mapId' : <map id>


TOURNAMENT
    /!\ Only the administrator can create tournament /!\
    create tournament
        'type' : 'tournament'
        'cmd' : 'create'
        'start' : <start date>
        'powerUp' : true | false
        'mapId' : <map id>
        -> No more field

    join tournament
        'type' : 'tournament'
        'cmd' : 'join'
        -> 'type' : 'joinReply'
           'tournamentUserId' : <tournament user id>

    => Game start
        'type' : 'gameStart'
        'gamePort' : <port> # port of the websocket for game
        'paddleId' : <paddle id>
        'teamId' : <team id>

    => match result
        'type' : 'matchResult'
        'winner' : <tournament user id>
        'loser' : <tournament user id>

    => end tournament
        'type' : 'endTournament'
        'onePongMan' : <tournament user id>


/!\ All messages for and from game are in it's websocket /!\
GAME
	player identification
		'type' : 'userIdentification'
		'id_paddle' : <id paddle>
		'id_team' : <id team>
		-> No more field

    player input
        'type' : 'userInput'
        'key' : 'up' | 'down' | 'powerUp' | 'launchBall'
        'value' : 'press' | 'release'
        -> No more field

    => start info
        'type' : 'startInfo'
        'obstacles' : [<obstacles>, ...]
        'powerUp' : true | false

    => server info
        'type' : 'serverInfo'
        'updateObstacles' : <update obstacles> | null
        'updatePaddles' : <update paddles>  | null
        'updateBalls' : <update balls>  | null
        'deleteBall' : <delete ball>  | null
        'changeUserPowerUp' : <change user power up>  | null
        'updatePowerUpInGame' : <update power up in game>  | null
        'updateScore' : <update score>  | null

    => end game
        'type' : 'endGame' # Not the movie
        'leftTeamScore' : <left team score>
        'rightTeamScore' : <right team score>

    <update obstacles> :
        'type' : 'updateObstables'
        'obstacles' : [<obstacles>, ...]

    <update paddles> :
        'type' : 'updateObstables'
        'obstacles' : [<paddles>, ...]

    <update balls> :
        'type' : 'updateBalls'
        'balls' : [<ball>, ...]

    <delete ball> :
        'type' : 'deleteBall'
        'ballIndex' : <ball index>

    <change user power up> :
        'type' : 'changeUserPowerUp'
        'powerUpId' : <power up id>

    <update power up in game> :
        'type' : 'updatePowerUp'
        'position' : <point>
        'visible' : true | false

    <update score> :
        'type' : 'updateScore'
        'scoreLeft' : <score left>
        'scoreRight' : <score right>

    <obstacles> :
        'points' : [<point>, ...]

    <paddles> :
        'topLeft' : <point>
        'botLeft' : <point>
        'topRight' : <point>
        'botRight' : <point>
        'teamId' : <team id> # 0 = left, 1 = right
        'paddleId' : <paddle id>

    <ball> :
        'position' : <point>
        'direction' : <point>
        'radius' : int
        'speed' : int

    <point> :
        'x' : float
        'y' : float
