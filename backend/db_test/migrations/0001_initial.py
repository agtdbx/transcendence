# Generated by Django 5.0.2 on 2024-02-13 16:50

import db_test.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('idUser', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('username', models.CharField(max_length=15, unique=True)),
                ('profilPicture', models.ImageField(upload_to='images/', validators=[db_test.validators.validate_file_size], verbose_name='')),
                ('tokenJWT', models.TextField()),
                ('money', models.IntegerField()),
                ('status', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('idMap', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Achivement',
            fields=[
                ('idUser', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, primary_key=True, serialize=False, to='db_test.user')),
                ('winner', models.IntegerField(default=0)),
                ('perfectShoot', models.IntegerField(default=0)),
                ('boscoFriend', models.IntegerField(default=0)),
                ('digGrave', models.IntegerField(default=0)),
                ('fallen', models.IntegerField(default=0)),
                ('unpredictable', models.IntegerField(default=0)),
                ('faster', models.IntegerField(default=0)),
                ('waveComming', models.IntegerField(default=0)),
                ('notPassed', models.IntegerField(default=0)),
                ('friend', models.IntegerField(default=0)),
                ('party', models.IntegerField(default=0)),
                ('molyBattle', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='connection42',
            fields=[
                ('login', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('idUser', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
        migrations.CreateModel(
            name='connectionPassword',
            fields=[
                ('idPassword', models.IntegerField(primary_key=True, serialize=False)),
                ('password', models.TextField()),
                ('idUser', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('idTarget', models.IntegerField()),
                ('link', models.IntegerField()),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('idMatch', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.IntegerField()),
                ('matchDate', models.TimeField()),
                ('matchDuration', models.IntegerField()),
                ('powerUp', models.BooleanField()),
                ('scoreLeft', models.IntegerField(default=0)),
                ('scoreRight', models.IntegerField(default=0)),
                ('idMap', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.map')),
            ],
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('goalTime', models.IntegerField(default=0)),
                ('nbBounce', models.IntegerField(default=0)),
                ('perfectedShot', models.BooleanField(default=0)),
                ('ballSpeed', models.IntegerField(default=0)),
                ('ownGoal', models.BooleanField(default=False)),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
                ('idMatch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.match')),
            ],
        ),
        migrations.CreateModel(
            name='MatchUser',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('nbGoal', models.IntegerField(default=0)),
                ('maxBallSpeed', models.IntegerField(default=0)),
                ('mabBallBounce', models.IntegerField(default=0)),
                ('nbCC', models.IntegerField(default=0)),
                ('nbPerfectShot', models.IntegerField(default=0)),
                ('idMatch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.match')),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.TimeField()),
                ('data', models.TextField()),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
        migrations.CreateModel(
            name='PrivMessage',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.TimeField()),
                ('data', models.TextField()),
                ('idTarget', models.IntegerField()),
                ('idUser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='db_test.user')),
            ],
        ),
    ]
